'use client'
import { Fragment, useState } from 'react'
import { Dialog, Transition } from '@headlessui/react'
import { Popover } from '@headlessui/react'
import Link from 'next/link'
import Options from '@/components/navbar options'
import MobileOptions from '@/components/navbar mobile options'
import {
  CommandLineIcon,
  DocumentTextIcon,
  NewspaperIcon,
  RectangleStackIcon,
  FingerPrintIcon,
  CalendarDaysIcon,
  UserGroupIcon,
  UsersIcon,
  LanguageIcon,
  CurrencyBangladeshiIcon,
  FlagIcon,
  IdentificationIcon,
  ArrowRightOnRectangleIcon,
  Bars3CenterLeftIcon,
  QuestionMarkCircleIcon,
  ScaleIcon,
  ShieldCheckIcon,
  XMarkIcon,
} from '@heroicons/react/24/outline'

const navigation = [
  { name: 'Dashboard', href: '/dashboard', icon: CommandLineIcon, current: true },
  { name: 'Members', href: '/dashboard/members', icon: UserGroupIcon, current: false },
  { name: 'Post', href: '/dashboard/post', icon: NewspaperIcon, current: false },
  { name: 'Event', href: '/dashboard/event', icon: CalendarDaysIcon, current: false },
  { name: 'Resources', href: '/dashboard/resource', icon: DocumentTextIcon, current: false },
  { name: 'Task', href: '/dashboard/task', icon: RectangleStackIcon, current: false },
  { name: 'Roles', href: '/dashboard/role', icon: FingerPrintIcon, current: false },
  { name: 'Meeting', href: '/dashboard/meeting', icon: LanguageIcon, current: false },
  { name: 'Expense', href: '/dashboard/expense', icon: CurrencyBangladeshiIcon, current: false },
]

const secondaryNavigation = [
  { name: 'Profile', href: '/profile', icon: IdentificationIcon },
  { name: 'Log Out', href: '/logout', icon: ArrowRightOnRectangleIcon },
]

function classNames(...classes) {
  return classes.filter(Boolean).join(' ')
}

export const metadata = {
  title: 'Dashboard | IEEE AIUB Student Branch',
  description: 'Generated by Next.js',
}

export default function RootLayout({ children }) {
  const [sidebarOpen, setSidebarOpen] = useState(false)
  return (
    <>
      <div className="min-h-full">
        <Transition.Root show={sidebarOpen} as={Fragment}>
          <Dialog as="div" className="relative z-40 lg:hidden" onClose={setSidebarOpen}>
            <Transition.Child
              as={Fragment}
              enter="transition-opacity ease-linear duration-300"
              enterFrom="opacity-0"
              enterTo="opacity-100"
              leave="transition-opacity ease-linear duration-300"
              leaveFrom="opacity-100"
              leaveTo="opacity-0"
            >
              <div className="fixed inset-0 bg-gray-600 bg-opacity-75" />
            </Transition.Child>

            <div className="fixed inset-0 z-40 flex">
              <Transition.Child
                as={Fragment}
                enter="transition ease-in-out duration-300 transform"
                enterFrom="-translate-x-full"
                enterTo="translate-x-0"
                leave="transition ease-in-out duration-300 transform"
                leaveFrom="translate-x-0"
                leaveTo="-translate-x-full"
              >
                <Dialog.Panel className="relative flex w-full max-w-xs flex-1 flex-col bg-cyan-700 pt-5 pb-4">
                  <Transition.Child
                    as={Fragment}
                    enter="ease-in-out duration-300"
                    enterFrom="opacity-0"
                    enterTo="opacity-100"
                    leave="ease-in-out duration-300"
                    leaveFrom="opacity-100"
                    leaveTo="opacity-0"
                  >
                    <div className="absolute top-0 right-0 -mr-12 pt-2">
                      <button
                        type="button"
                        className="ml-1 flex h-10 w-10 items-center justify-center rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white"
                        onClick={() => setSidebarOpen(false)}
                      >
                        <span className="sr-only">Close sidebar</span>
                        <XMarkIcon className="h-6 w-6 text-white" aria-hidden="true" />
                      </button>
                    </div>
                  </Transition.Child>
                  <div className="flex flex-shrink-0 items-center px-4">
                    <img
                      className="h-8 w-auto"
                      src="https://ieeeaiubsb.com/wp-content/uploads/2020/09/ieeeaiubsb_logo-2.png"
                      alt="Easywire logo"
                    />
                  </div>
                  <nav
                    className="mt-5 h-full flex-shrink-0 divide-y divide-cyan-800 overflow-y-auto"
                    aria-label="Sidebar"
                  >
                    <div className="space-y-1 px-2">
                      {navigation.map((item) => (
                        <Link
                          key={item.name}
                          href={item.href}
                          className={classNames(
                            item.current
                              ? 'bg-cyan-800 text-white'
                              : 'text-cyan-100 hover:text-white hover:bg-cyan-600',
                            'group flex items-center px-2 py-2 text-base font-medium rounded-md'
                          )}
                          aria-current={item.current ? 'page' : undefined}
                        >
                          <item.icon className="mr-4 h-6 w-6 flex-shrink-0 text-cyan-200" aria-hidden="true" />
                          {item.name}
                        </Link>
                      ))}
                    </div>
                    <div className="mt-6 pt-6">
                      <div className="space-y-1 px-2">
                        {secondaryNavigation.map((item) => (
                          <Link
                            key={item.name}
                            href={item.href}
                            className="group flex items-center rounded-md px-2 py-2 text-base font-medium text-cyan-100 hover:bg-cyan-600 hover:text-white"
                          >
                            <item.icon className="mr-4 h-6 w-6 text-cyan-200" aria-hidden="true" />
                            {item.name}
                          </Link>
                        ))}
                      </div>
                    </div>
                  </nav>
                </Dialog.Panel>
              </Transition.Child>
              <div className="w-14 flex-shrink-0" aria-hidden="true">
              </div>
            </div>
          </Dialog>
        </Transition.Root>

        {/* Static sidebar for desktop */}
        <div className="hidden lg:fixed lg:inset-y-0 lg:flex lg:w-64 lg:flex-col">
          {/* Sidebar component, swap this element with another sidebar if you like */}
          <div className="flex flex-grow flex-col overflow-y-auto bg-cyan-700 pt-5 pb-4">
            <div className="flex flex-shrink-0 items-center px-4">
              <img
                className="h-8 w-auto"
                src="https://ieeeaiubsb.com/wp-content/uploads/2020/09/ieeeaiubsb_logo-2.png"
                alt="Easywire logo"
              />
            </div>
            <nav className="mt-5 flex flex-1 flex-col divide-y divide-cyan-800 overflow-y-auto" aria-label="Sidebar">
              <div className="space-y-1 my-2 px-2">
                {navigation.map((item) => (
                  <Link
                    key={item.name}
                    href={item.href}
                    className={classNames(
                      item.current ? 'bg-cyan-800 text-white' : 'text-cyan-100 hover:text-white hover:bg-cyan-600',
                      'group flex items-center px-2 py-2 text-sm leading-6 font-medium rounded-md'
                    )}
                    aria-current={item.current ? 'page' : undefined}
                  >
                    <item.icon className="mr-4 h-6 w-6 flex-shrink-0 text-cyan-200" aria-hidden="true" />
                    {item.name}
                  </Link>
                ))}
              </div>
              <div className="mt-6 pt-6">
                <div className="space-y-1 px-2">
                  {secondaryNavigation.map((item) => (
                    <Link
                      key={item.name}
                      href={item.href}
                      className="group flex items-center rounded-md px-2 py-2 text-sm font-medium leading-6 text-cyan-100 hover:bg-cyan-600 hover:text-white"
                    >
                      <item.icon className="mr-4 h-6 w-6 text-cyan-200" aria-hidden="true" />
                      {item.name}
                    </Link>
                  ))}
                </div>
              </div>
            </nav>
          </div>
        </div>

        <div className="flex flex-1 flex-col lg:pl-64">
          <div className="bg-white shadow">
            <Popover className="relative shadow">
              <div className="mx-auto max-w-7xl px-6">
                <div className="flex items-center space-x-4 justify-between lg:justify-center py-6">
                  <button
                    type="button"
                    className="rounded-md p-2 text-gray-400 focus:outline-none hover:bg-gray-100 hover:text-gray-500 lg:hidden"
                    onClick={() => setSidebarOpen(true)}
                  >
                    <span className="sr-only">Open sidebar</span>
                    <Bars3CenterLeftIcon className="h-6 w-6" aria-hidden="true" />
                  </button>
                  <img class="h-8 w-auto lg:hidden" src="https://ieeeaiubsb.com/wp-content/uploads/2020/09/ieeeaiubsb_logo-2.png" alt="Easywire logo" />
                  <Options />
                </div>
              </div>
              <MobileOptions />
            </Popover>
          </div>
          <main className="flex-1 pb-8 bg-gray-100">
            {children}
          </main>
        </div>
      </div>
    </>
  )
}
